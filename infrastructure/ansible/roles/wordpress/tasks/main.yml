- name: Check if WordPress is already installed
  stat:
    path: "{{ document_root }}/wp-config.php"
  register: wp_installed

- name: Backup existing WordPress
  when: wp_installed.stat.exists
  synchronize:
    src: "{{ document_root }}/"
    dest: "/tmp/backup_wordpress_{{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}"
    recursive: yes

- name: Remove existing WordPress files
  when: wp_installed.stat.exists
  file:
    path: "{{ document_root }}"
    state: absent

- name: Create document root
  file:
    path: "{{ document_root }}"
    state: directory
    owner: apache
    group: apache
    mode: '0755'

- name: Install WordPress via dnf
  dnf:
    name: wordpress
    state: present
  register: wordpress_install
  failed_when: false

- name: Sync WordPress files from dnf-installed location to document root
  when: wordpress_install.rc == 0
  command: rsync -avz /usr/share/wordpress/ {{ document_root }}/
  args:
    creates: "{{ document_root }}/wp-config-sample.php"

- name: Install WordPress from tarball as fallback
  when: wordpress_install is failed
  block:
    - name: Download latest WordPress
      get_url:
        url: https://wordpress.org/latest.tar.gz
        dest: /tmp/wordpress.tar.gz
        mode: '0644'

    - name: Extract WordPress
      unarchive:
        src: /tmp/wordpress.tar.gz
        dest: "{{ document_root }}"
        remote_src: yes
        extra_opts: [--strip-components=1]
        creates: "{{ document_root }}/wp-config-sample.php"

- name: Deploy wp-config.php
  template:
    src: wp-config.php.j2
    dest: "{{ document_root }}/wp-config.php"
    owner: apache
    group: apache
    mode: '0644'
