- name: Check if Apache is installed
  shell: rpm -q httpd
  register: apache_installed
  ignore_errors: true

- name: Backup Apache config
  when: apache_installed.rc == 0
  command: cp -r /etc/httpd /tmp/backup_apache_conf_{{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}
  ignore_errors: true

- name: Ensure Apache socket directory exists
  file:
    path: /run/httpd
    state: directory
    owner: apache
    group: apache
    mode: '0755'
  when: env == "development"

- name: Remove Apache if installed
  when: apache_installed.rc == 0
  dnf:
    name: httpd
    state: absent

- name: Install Apache
  dnf:
    name: httpd
    state: present

- name: Ensure findutils is installed (provides find command)
  dnf:
    name: findutils
    state: present

- name: Kill existing httpd processes (for local/dev)
  shell: "pkill httpd || true"
  when: not use_systemd | default(false)

- name: Remove stale httpd socket files (for local/dev)
  shell: "rm -f /run/httpd/*.sock || true"
  when: not use_systemd | default(false)

- name: Ensure global ServerName is set
  lineinfile:
    path: /etc/httpd/conf/httpd.conf
    line: "ServerName localhost"
    state: present
  when: not use_systemd | default(false)

- name: Ensure conf.d is included in httpd.conf
  lineinfile:
    path: /etc/httpd/conf/httpd.conf
    regexp: '^#?Include.*conf\.d/\*\.conf'
    line: 'IncludeOptional conf.d/*.conf'
    state: present

- name: Start httpd
  block:
    - name: Use systemd (production)
      ansible.builtin.systemd:
        name: httpd
        state: started
        enabled: yes
      when: use_systemd | default(true)

    - name: Use command for local (no systemd)
      shell: "httpd -k start"
      when: not use_systemd | default(false)

- name: Find virtualhost template files
  find:
    paths: "roles/apache/templates/virtualhost"
    patterns: "*.j2"
  register: vhost_templates

- name: Deploy all virtualhost templates
  template:
    src: "virtualhost/{{ item.config_file }}.j2"
    dest: "/etc/httpd/conf.d/{{ item.config_file }}"
    owner: root
    group: root
    mode: '0644'
  loop: "{{ virtualhosts }}"
  notify:
  - Reload Apache (systemd)
  - Reload Apache (non-systemd)

- name: Ensure document root ownership is apache:apache
  file:
    path: "{{ item.document_root }}"
    state: directory
    recurse: yes
    owner: apache
    group: apache
  loop: "{{ virtualhosts }}"

- name: Ensure directory permissions under document root
  shell: find "{{ item.document_root }}" -type d -exec chmod 755 {} \;
  loop: "{{ virtualhosts }}"

- name: Ensure file permissions under document root
  shell: find "{{ item.document_root }}" -type f -exec chmod 644 {} \;
  loop: "{{ virtualhosts }}"


